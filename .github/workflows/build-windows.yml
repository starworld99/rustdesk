name: Build Windows Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true

      - name: Install cross compile tools
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64 autoconf automake libtool pkg-config build-essential

      - name: Force bundled libsodium (disable autotools)
        run: |
          echo "SODIUM_BUILD_STATIC=1" >> $GITHUB_ENV
          echo "SODIUM_USE_PKG_CONFIG=0" >> $GITHUB_ENV
          echo "CARGO_FEATURE_BUNDLED=1" >> $GITHUB_ENV
          echo "CFLAGS=-O3 -ffunction-sections -fdata-sections -m64 -Wall -Wextra" >> $GITHUB_ENV

      - name: Configure environment for cross compile
        run: |
          echo "CC_x86_64_pc_windows_gnu=x86_64-w64-mingw32-gcc" >> $GITHUB_ENV
          echo "CXX_x86_64_pc_windows_gnu=x86_64-w64-mingw32-g++" >> $GITHUB_ENV

      - name: Set RustDesk server environment
        env:
          RENDEZVOUS_SERVER: "xyz.bsp.cn"
          RELAY_SERVER: "xyz.bsp.cn:21117"
          RS_PUB_KEY: "B70FbvLRUyE1K4QSYizzi8jypvvfEERdVbBU61EE8Us="
          API_SERVER: "https://xyz.bsp.cn/rustdesk-hbbs"
        run: |
          echo "RENDEZVOUS_SERVER=${RENDEZVOUS_SERVER}" >> $GITHUB_ENV
          echo "RELAY_SERVER=${RELAY_SERVER}" >> $GITHUB_ENV
          echo "RS_PUB_KEY=${RS_PUB_KEY}" >> $GITHUB_ENV
          echo "API_SERVER=${API_SERVER}" >> $GITHUB_ENV

      - name: Build Windows binary
        run: |
          cargo build --release --target x86_64-pc-windows-gnu

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows
          path: target/x86_64-pc-windows-gnu/release/rustdesk.exe
